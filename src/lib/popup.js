// Generated by CoffeeScript 1.3.3
var BG, addLink, config, init, initEvents, initPendings, refresh, search, setEvent, setPending, setTab, tab, tableHtml;

tableHtml = function(data) {
  var html;
  html = "<tr data-href=\"" + data.link + "\">\n  <td>\n    <a>" + data.title + "</a>\n  </td><td>\n    <a>" + data.msg + "</a>\n  </td>\n</tr>";
  return $(html).appendTo(data.to);
};

setPending = function(p) {
  return tableHtml({
    to: "#table-pending",
    link: p.link,
    title: p.title,
    msg: p.updated
  });
};

setEvent = function(ev) {
  return tableHtml({
    to: "#table-today",
    link: ev.link || '',
    title: ev.title || '',
    msg: ev.name || ''
  });
};

initPendings = function() {
  var p, _i, _len, _ref;
  $('#tab1 a').text("未読の通知");
  _ref = BG.pendings;
  for (_i = 0, _len = _ref.length; _i < _len; _i++) {
    p = _ref[_i];
    setPending(p);
  }
  if (BG.pendings.length > 0) {
    $('#tab1 a').text("未読の通知( " + BG.pendings.length + " )");
  }
  return addLink();
};

initEvents = function() {
  var mt, re, _i, _len, _ref;
  $('#tab2 a').text("本日の予定");
  _ref = BG.rawEvents;
  for (_i = 0, _len = _ref.length; _i < _len; _i++) {
    re = _ref[_i];
    mt = $(re).text().match(/(\d{2}:\d{2})?-?(\d{2}:\d{2})? ?(.*)/);
    setEvent({
      link: BG.getHost() + $("a", re).attr('href'),
      name: mt[3] || 'error',
      title: mt[1] || ''
    });
  }
  if (BG.rawEvents.length > 0) {
    $('#tab2 a').text("本日の予定( " + BG.rawEvents.length + " )");
  }
  return addLink();
};

addLink = function() {
  return $('tr[data-href]').addClass('clickable').click(function(e) {
    return window.open($(e.target).closest('tr').data('href'));
  });
};

init = function() {
  var current;
  $("#title").attr("href", localStorage.cybozuUrl);
  current = BG.tab || 1;
  setTab(current);
  initPendings();
  return initEvents();
};

setTab = function(n) {
  $("#tab" + n).addClass('active');
  return $("#content" + n).addClass('active');
};

refresh = function() {
  $("#table-pending").empty();
  $("#table-today").empty();
  BG.getPendings(initPendings);
  BG.getEvents(initEvents);
  return BG.notifyEvent();
};

search = function() {
  var query;
  query = $('#query').attr('value');
  chrome.tabs.create({
    url: "" + (BG.getSearchUrl(query))
  }, null);
  return window.close();
};

config = function() {
  chrome.tabs.create({
    url: "/option.html"
  }, null);
  return window.close();
};

tab = function(n) {
  return BG.tab = n;
};

BG = chrome.extension.getBackgroundPage();
